package org.zerock.myapp.interceptor;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Component;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;
import org.zerock.myapp.domain.UserVO;

import lombok.NoArgsConstructor;
import lombok.extern.log4j.Log4j2;

@NoArgsConstructor
@Log4j2


//로그인 성공여부를 체크하는 인터셉터 
//@Component
public class AuthInterceptor 
	implements HandlerInterceptor {
	
	private static final String loginKey = "__LOGIN__";
	
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		log.debug("===============================================================");
		log.debug("1. preHandle(request, response, {}) invoked.", handler.getClass().getName());
		log.debug("===============================================================");
		
		return true;
	}//preHandle

	// 뒤의 컨트롤러 메소드 호출이 완료된 후, 그리고 View가 호출되기 전에 수행된다.
	// 단, 컨트롤러 메소드 수행에서 예외가 발생되지  말아야 한다.
	// 컨트롤러 메소드 수행에서 예외가 발생되면, 이 메소드는 수행되지 않는다.
	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		
		log.debug("===============================================================");
		log.debug("2. postHandle(request, response, {}, {}) invoked.", handler.getClass().getName(), modelAndView);
		log.debug("===============================================================");
		
		
		
		
	}//postHandle

	
	// 뒤의 컨트롤러 메소드 수행시, 예외의 발생여부와 상관없이ㅡ View까지 호출된 후에 수행된다 
	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
			throws Exception {

		log.debug("===============================================================");
		log.debug("3. afterCompletion(request, response, {}, {}) invoked.", handler.getClass().getName(), ex);
		log.debug("===============================================================");
		
		// 컨트롤러에 대한 예외 처리
		//    -> DB에 대한 로그를 남긴다 
		//    -> 에러페이지로 이동
		
		HandlerInterceptor.super.afterCompletion(request, response, handler, ex);
	}//afterCompletion

	
}//end class
