package org.zerock.myapp.controller;

import java.io.IOException;

import org.apache.http.client.ClientProtocolException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.zerock.myapp.domain.MemberDTO;
import org.zerock.myapp.service.RegisterService;

import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.extern.log4j.Log4j2;

@Log4j2
@NoArgsConstructor

@Controller
@RequestMapping("/register/")
public class RegisterController {

	
	@Setter(onMethod_ = @Autowired)
	private RegisterService service; 
	
	
	@GetMapping("checkCBNO")
	public void checkCBNO() {
		log.debug("checkCBNO() invoked.");
	}
	
	@GetMapping("register")
	public void register() {
		log.debug("register() invoked.");
	}
	
	
	
	//사업자등록번호 DB중복검사
	@ResponseBody
	@PostMapping("doubleCheckCBNO")
	public int doubleCheckCBNO(MemberDTO dto) {
		log.info("!@#@#@! > cbno : " + dto.getCbno());
		int check = this.service.checkCBNO(dto);
		
		if(check == 0) {
			return 1;
		} else {
			return 0;
		}
		
	}
	
	//사업자등록번호 API 유효성 검사
	@ResponseBody
	@PostMapping("homeTaxCBNO")
	public String homeTaxCBNO(MemberDTO dto) throws ClientProtocolException, IOException {
		
		Double tmp = this.service.homeTaxCBNO(dto);
		log.info("API 수행 결과 : " + tmp);
		if(tmp != null) { //매칭이되면 1 
			return "ok";
		} else { //매칭이 안되면 0 
			return "fail";
		}
	}
	
	
	
	@PostMapping("sendMail")
	public void register(MemberDTO dto) {
		log.info("@@EMAIL : " + dto.getEmail());
		this.service.sendMail(dto);
		
		
	}
	
	
	
}
